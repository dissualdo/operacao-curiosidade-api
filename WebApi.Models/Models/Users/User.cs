using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema; 

namespace WebApi.Models.Models.Users
{
    /// <summary>
    /// Represents a system user (the person registered in the curiosity operation).
    /// Contains basic personal information such as name, age, email, and address.
    /// </summary>
    [Table("User")] 
    public class User
    {
        /// <summary>
        /// Unique identifier for the user.
        /// Automatically generated by the database.
        /// </summary>
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public long Id { get; set; }

        /// <summary>
        /// Full name of the user.
        /// Required in the first registration step.
        /// </summary>
        [Required, MaxLength(150)]
        public string Name { get; set; } = string.Empty;

        /// <summary>
        /// Age of the user (optional).
        /// </summary>
        public int? Age { get; set; }

        /// <summary>
        /// User's email address.
        /// Required and must be unique.
        /// </summary>
        [Required, EmailAddress, MaxLength(200)]
        public string Email { get; set; } = string.Empty;

        /// <summary>
        /// User's address (optional).
        /// </summary>
        [MaxLength(300)]
        public string? Address { get; set; }

        /// <summary>
        /// Indicates whether the user is active or inactive.
        /// </summary>
        public bool IsActive { get; set; } = true;

        /// <summary>
        /// Timestamp of when the user record was created.
        /// Defaults to the current UTC date and time.
        /// </summary>
        public DateTime CreatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Timestamp of the last update for the user record.
        /// </summary>
        public DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// Foreign key to the authentication credentials.
        /// Used when local authentication is applied.
        /// </summary>
        public long ? IdAuthentication { get; set; }

        /// <summary>
        /// Navigation property for the associated authentication record.
        /// </summary>
        [ForeignKey(nameof(IdAuthentication))]
        public virtual Authentication ? Authentication { get; set; }

        /// <summary>
        /// Navigation property for the curiosity layers linked to this user.
        /// (1–1 relationship).
        /// </summary>
        public virtual Curiosity? Curiosity { get; set; }
    }
}
